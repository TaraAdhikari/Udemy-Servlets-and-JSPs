1. Difference between getAttribute() and getParameter()
    Ans: A. --getParameter() returns http request parameters. Those passed from the client to the server.
                              For example http://example.com/servlet?parameter=1. Can only return String
            --getAttribute() is for server-side usage only - you fill the request with attributes that you can use within the same request.
                      For example - you set an attribute in a servlet, and read it from a JSP. Can be used for any object, not just string.
         B. ---The return type for attributes is an Object, whereas the return type for a parameter is a String. When calling the
                getAttribute(String name) method, bear in mind that the attributes must be cast.
         
2. Difference between include and forward mechanism for request dispatching concept?
      Ans: A. --The main difference is that when you use forward the control is transferred to the next servlet/jsp you are calling,
                while include retains the control with the current servlet, it just includes the processing done by the calling 
                servlet/jsp(like doing any out.println or other processing).
           B. --include: will include another file in our current file
                forward: will forward the current request to the forwarding page
           C. --Assume you have two pages, pageA, and pageB. In pageA you wrote the include tag. In this case the control was in pageA
                til you called the include tag. At this point the full control goes to pageB. When It's done, control is returned to pageA
                starting from the next point of coding after the include tag and continuing to the rest of pageA.
                
                Well, to get things much clearer, let's say that we have the same pages, pageA and pageB, but this time we will use the
                forward tag in pageA, not the include tag. Again, the control will begin in pageA till we call the forward tag in pageA,
                at this point, control is transfered to pageB, just like the include tag. But the difference is what happens when pageB 
                completes. In case of the forward tag, control doesn't go back to pageA again.
           D. --The key difference between the two is that the forward() method will CLOSE the output stream after it has been invoked, 
                whereas the include method leaves the output stream OPEN.
                
                answering with an example : lets have a servlet page named xxx.java and a jsp page named yy.jsp

                In the yy.jsp
                WELCOME to yy.jsp
                
                In the xxx.java //using forward()
                RequestDispatcher rd = request.getRequestDispatcher("yy.jsp");
                    rd.forward(request,response);
                    out.println("back to servlet"); //this wont b displayed
                output
                WELCOME to yy.jsp 
                
                In the xxx.java //using include()
                RequestDispatcher rd = request.getRequestDispatcher("yy.jsp");
                      rd.include(request,response);
                      out.println("back to servlet");
                output
                WELCOME to yy.jsp back to servlet
                
 3. Difference between SendRedirect and Forward
                Forward()-When we use forward method request is transfer to other resource within the same server for further processing.
                SendRediret()-In case of sendRedirect request is transfer to another resource to different domain or different server for
                futher processing.

                Forward()-In case of forward Web container handle all process internally and client or browser is not involved.

                SendRediret()-When you use SendRedirect container transfers the request to client or browser so url given inside the
                sendRedirect method is visible as a new request to the client.

                Forward()-When forward is called on requestdispather object we pass request and response object so our old request object
                is present on new resource which is going to process our request

                SendRediret()-In case of SendRedirect call old request and response object is lost because it’s treated as new request by 
                the browser.
                Forward()-Visually we are not able to see the forwarded address, its is transparent
                SendRediret()-In address bar we are able to see the new redirected address it’s not transparent.

                Forward()-Using forward () method is faster then send redirect.
                SendRediret()-SendRedirect is slower because one extra round trip is required beasue completely new request is created and
                old request object is lost.Two browser request requird.

                Forward()-When we redirect using forward and we want to use same data in new resource we can use request.setAttribute ()
                as we have request object available.
                SendRediret()-But in sendRedirect if we want to use we have to store the data in session or pass along with the URL.



